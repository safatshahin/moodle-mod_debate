{"version":3,"file":"debate_view.min.js","sources":["../src/debate_view.js"],"sourcesContent":["/**\n * Js for debate page.\n *\n * @package     mod_debate\n * @copyright   2021 Safat Shahin <safatshahin@yahoo.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'core/config', 'core/notification', 'core/templates'],\n    function ($, AJAX, str,\n              mdlcfg, notification, templates) {\n        var debateView = {\n            init: function (userFullName, userImageURL, userID, courseID, debateID,\n                            userCapability, userEditCapability, userDeleteCapability) {\n                // VARIABLES TO MAINTAIN THE FRONTEND FEATURES\n                var responseType = 0;\n                var responseId = '';\n                var responseTextID = '';\n                var id = 0;\n                var elementid = '';\n                var elementidContainer = '';\n                var editID = '';\n                var deleteID = '';\n                // DELAY TIMER FOR THE USER TO FINISH TYPING TO FIND POSSIBLE MATCH\n                var delay = (function () {\n                    var timer = 0;\n                    return function (callback, ms) {\n                        clearTimeout(timer);\n                        timer = setTimeout(callback, ms);\n                    };\n                })();\n                // ANIMATE TO THE TOP OF THE PAGE FOR EDITING RESPONSE\n                $.animateToDiv = function () {\n                    $('html, body').animate({\n                        scrollTop: $(\".mod-debate-topic-container\").offset().top\n                    }, 2000);\n                };\n                // POSSIBLE MATCH WITH CURRENTLY TYPED RESPONSE\n                $(\".mod-debate-response-input\").keyup(function () {\n                    delay(function () {\n                        $(\"div\").remove(\".mod-debate-find-response\");\n                        $(\"div\").remove(\".mod-debate-sentiment-container\");\n                        var userResponsetext = $(responseTextID).val();\n                        if (userResponsetext.length > 0) {\n                            toxicity.load(0.9).then(model => {\n                                model.classify(userResponsetext).then(predictions => {\n                                    var responseAjax = AJAX.call([{\n                                        methodname: 'mod_debate_find_debate_respose',\n                                        args: {\n                                            courseid: parseInt(courseID),\n                                            debateid: parseInt(debateID),\n                                            response: userResponsetext,\n                                            responsetype: parseInt(responseType),\n                                            sentiment: JSON.stringify(predictions)\n                                        }\n                                    }]);\n                                    responseAjax[0].done(function (found) {\n                                        if (found.result) {\n                                            var getResponses = JSON.parse(found.data);\n                                            var sentiment = JSON.parse(found.sentiment);\n                                            var sentimentContext = {\n                                                found_sentiment: sentiment,\n                                            };\n                                            var context = {\n                                                found_response: getResponses,\n                                            };\n                                            if ($('#mod-debate-insert-postive-response').is(\":visible\")\n                                                || $('#mod-debate-insert-negative-response').is(\":visible\")) {\n                                                templates.render('mod_debate/debate_find_response', context).then(function (html, js) {\n                                                    var debateResponse = $(responseId);\n                                                    debateResponse.after(html);\n                                                }).fail(notification.exception);\n                                                templates.render('mod_debate/debate_sentiment', sentimentContext).then(function (html, js) {\n                                                    var debateResponse = $(responseId);\n                                                    debateResponse.after(html);\n                                                }).fail(notification.exception);\n                                            }\n                                        }\n                                    }).fail(notification.exception);\n                                });\n                            });\n\n                        }\n                    }, 700);\n                });\n                // DELETE RESPONSE\n                $(document).on('click', '.mod-debate-negative-delete', function () {\n                    id = $(this).attr(\"data-id\");\n                    debateView.deleteResponse(courseID, debateID, id);\n                });\n                $(document).on('click', '.mod-debate-positive-delete', function () {\n                    id = $(this).attr(\"data-id\");\n                    debateView.deleteResponse(courseID, debateID, id);\n                });\n                // EDIT RESPONSE\n                $(document).on('click', '.mod-debate-negative-edit', function () {\n                    id = $(this).attr(\"data-id\");\n                    elementid = '#element' + id;\n                    elementidContainer = '#element' + id + 'container';\n                    if ($('#mod-debate-insert-postive-response').is(\":hidden\")\n                        && $('#mod-debate-insert-negative-response').is(\":hidden\")) {\n                        var text = $(elementid).text().trim();\n                        responseType = 0;\n                        responseId = '#mod-debate-insert-negative-response';\n                        responseTextID = '#mod-debate-negative-response-input';\n                        editID = 'mod-debate-negative-edit';\n                        deleteID = 'mod-debate-negative-delete';\n                        $(responseTextID).val(text);\n                        $(responseTextID).html(text);\n                        $(elementidContainer).css('display', 'none');\n                        $(responseId).css('display', 'block');\n                        $.animateToDiv();\n                    } else {\n                        debateView.renderNotification(0, 'info');\n                    }\n                });\n                $(document).on('click', '.mod-debate-positive-edit', function () {\n                    id = $(this).attr(\"data-id\");\n                    elementid = '#element' + id;\n                    elementidContainer = '#element' + id + 'container';\n                    if ($('#mod-debate-insert-negative-response').is(\":hidden\")\n                        && $('#mod-debate-insert-postive-response').is(\":hidden\")) {\n                        var text = $(elementid).text().trim();\n                        responseType = 1;\n                        responseId = '#mod-debate-insert-postive-response';\n                        responseTextID = '#mod-debate-positive-response-input';\n                        editID = 'mod-debate-positive-edit';\n                        deleteID = 'mod-debate-positive-delete';\n                        $(responseTextID).val(text);\n                        $(responseTextID).html(text);\n                        $(elementidContainer).css('display', 'none');\n                        $(responseId).css('display', 'block');\n                        $.animateToDiv();\n                    } else {\n                        debateView.renderNotification(0, 'info');\n                    }\n                });\n                // ADD RESPONSE\n                $(document).on('click', '.mod-debate-positive-icon', function () {\n                    if ($('#mod-debate-insert-negative-response').is(\":hidden\")\n                        && $('#mod-debate-insert-postive-response').is(\":hidden\")) {\n                        var allocationAjax = AJAX.call([{\n                            methodname: 'mod_debate_check_response_allocation',\n                            args: {\n                                debateid: parseInt(debateID),\n                                attribute: 'positive',\n                                userid: parseInt(userID)\n                            }\n                        }]);\n                        allocationAjax[0].done(function (output) {\n                            var result = output.result;\n                            if (result) {\n                                responseType = 1;\n                                responseId = '#mod-debate-insert-postive-response';\n                                responseTextID = '#mod-debate-positive-response-input';\n                                editID = 'mod-debate-positive-edit';\n                                deleteID = 'mod-debate-positive-delete';\n                                $(responseTextID).val('');\n                                $(responseId).css('display', 'block');\n                                id = 0;\n                            } else {\n                                notification.addNotification({\n                                    message: output.message,\n                                    type: 'info'\n                                });\n                            }\n                        }).fail(notification.exception);\n                    } else {\n                        debateView.renderNotification(0, 'info');\n                    }\n                });\n                $(document).on('click', '.mod-debate-negative-icon', function () {\n                    if ($('#mod-debate-insert-postive-response').is(\":hidden\")\n                        && $('#mod-debate-insert-negative-response').is(\":hidden\")) {\n                        var allocationAjax = AJAX.call([{\n                            methodname: 'mod_debate_check_response_allocation',\n                            args: {\n                                debateid: parseInt(debateID),\n                                attribute: 'negative',\n                                userid: parseInt(userID)\n                            }\n                        }]);\n                        allocationAjax[0].done(function (output) {\n                            var result = output.result;\n                            if (result) {\n                                responseType = 0;\n                                responseId = '#mod-debate-insert-negative-response';\n                                responseTextID = '#mod-debate-negative-response-input';\n                                editID = 'mod-debate-negative-edit';\n                                deleteID = 'mod-debate-negative-delete';\n                                $(responseTextID).val('');\n                                $(responseId).css('display', 'block');\n                                id = 0;\n                            } else {\n                                notification.addNotification({\n                                    message: output.message,\n                                    type: 'info'\n                                });\n                            }\n                        }).fail(notification.exception);\n                    } else {\n                        debateView.renderNotification(0, 'info');\n                    }\n                });\n                // CANCEL ADD RESPONSE\n                $(document).on('click', '#mod-debate-cancel-respose', function () {\n                    $(responseId).css('display', 'none');\n                    $(elementidContainer).css('display', 'block');\n                    $(\"div\").remove(\".mod-debate-find-response\");\n                    $(\"div\").remove(\".mod-debate-sentiment-container\");\n                });\n                // UPDATE OR SAVE NEW OR EDITED RESPONSE\n                $(document).on('click', '#mod-debate-update-response', function () {\n                    $(\"div\").remove(\".mod-debate-find-response\");\n                    $(\"div\").remove(\".mod-debate-sentiment-container\");\n                    var userResponse = $(responseTextID).val();\n                    if (userResponse.length > 0) {\n                        var responseCall = AJAX.call([{\n                            methodname: 'mod_debate_add_debate_respose',\n                            args: {\n                                courseid: parseInt(courseID),\n                                debateid: parseInt(debateID),\n                                response: userResponse,\n                                responsetype: parseInt(responseType),\n                                id: parseInt(id)\n                            }\n                        }]);\n                        responseCall[0].done(function (output) {\n                            if (output.result) {\n                                $(responseId).css('display', 'none');\n                                $(\"div\").remove(\".mod-debate-find-response\");\n                                $(\"div\").remove(\".mod-debate-sentiment-container\");\n                                $(elementidContainer).remove();\n                                if (id === 0 && $.isNumeric(output.id)) {\n                                    id = output.id;\n                                }\n                                var outputContext = {\n                                    user_profile_image: userImageURL,\n                                    user_full_name: userFullName,\n                                    response: userResponse,\n                                    elementidcontainer: 'element' + id + 'container',\n                                    elementid: 'element' + id,\n                                    user_capability: userCapability,\n                                    user_edit_capability: userEditCapability,\n                                    user_delete_capability: userDeleteCapability,\n                                    id: id,\n                                    editid: editID,\n                                    deleteid: deleteID\n                                };\n                                templates.render('mod_debate/debate_response_output', outputContext).then(function (html, js) {\n                                    var outputResponse = $(responseId);\n                                    outputResponse.after(html);\n                                    id = 0;\n                                    $(\"div\").remove(\".mod-debate-find-response\");\n                                    $(\"div\").remove(\".mod-debate-sentiment-container\");\n                                    elementidContainer = '';\n                                    elementid = '';\n                                }).fail(notification.exception);\n                            } else {\n                                debateView.renderNotification(2, 'error');\n                            }\n                            $(\"div\").remove(\".mod-debate-find-response\");\n                            $(\"div\").remove(\".mod-debate-sentiment-container\");\n                        }).fail(notification.exception);\n                    } else {\n                        debateView.renderNotification(1, 'info');\n                    }\n                });\n            },\n            deleteResponse: function (courseID, debateID, id) {\n                str.get_strings([\n                    {'key': 'confirm_delete', component: 'mod_debate'}\n                ]).done(function (s) {\n                    if (confirm(s[0])) {\n                        var elementidContainer = '#element' + id + 'container';\n                        var responseAjax = AJAX.call([{\n                            methodname: 'mod_debate_delete_debate_respose',\n                            args: {\n                                courseid: parseInt(courseID),\n                                debateid: parseInt(debateID),\n                                id: parseInt(id)\n                            }\n                        }]);\n                        responseAjax[0].done(function (deleted) {\n                            if (deleted.result) {\n                                $(elementidContainer).remove();\n                                debateView.renderNotification(4, 'info');\n                            } else {\n                                debateView.renderNotification(3, 'info');\n                            }\n                        }).fail(notification.exception);\n                    }\n                });\n            },\n            renderNotification: function (notificationValue, notificationType) {\n                var strings = [\n                    {'key': 'edit_mode_active', component: 'mod_debate'},\n                    {'key': 'empty_response', component: 'mod_debate'},\n                    {'key': 'error_add', component: 'mod_debate'},\n                    {'key': 'error_delete', component: 'mod_debate'},\n                    {'key': 'success_delete', component: 'mod_debate'}\n                ];\n                str.get_strings(strings).then(function (results) {\n                    notification.addNotification({\n                        message: results[notificationValue],\n                        type: notificationType\n                    });\n                });\n            }\n        };\n        return debateView;\n    });\n"],"names":["define","$","AJAX","str","mdlcfg","notification","templates","debateView","init","userFullName","userImageURL","userID","courseID","debateID","userCapability","userEditCapability","userDeleteCapability","timer","responseType","responseId","responseTextID","id","elementid","elementidContainer","editID","deleteID","delay","callback","ms","clearTimeout","setTimeout","animateToDiv","animate","scrollTop","offset","top","keyup","remove","userResponsetext","val","length","toxicity","load","then","model","classify","predictions","call","methodname","args","courseid","parseInt","debateid","response","responsetype","sentiment","JSON","stringify","done","found","result","getResponses","parse","data","sentimentContext","found_sentiment","context","found_response","is","render","html","js","after","fail","exception","document","on","this","attr","deleteResponse","text","trim","css","renderNotification","attribute","userid","output","addNotification","message","type","userResponse","isNumeric","outputContext","user_profile_image","user_full_name","elementidcontainer","user_capability","user_edit_capability","user_delete_capability","editid","deleteid","get_strings","component","s","confirm","deleted","notificationValue","notificationType","results"],"mappings":"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"}